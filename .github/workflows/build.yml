name: Build
on: workflow_dispatch
jobs:
  Windows:
    permissions:
      contents: write
    runs-on: windows-2022
    steps:
      - name: Checkout sdl
        uses: actions/checkout@v4
        with:
          repository: libsdl-org/SDL
          ref: release-2.28.4
          path: sdl
      - name: Init MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build sdl
        run: |
          cd sdl
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Debug
          cmake --install . --config Debug --prefix install/Debug
          cmake --build . --config Release
          cmake --install . --config Release --prefix install/Release
      - name: Generate zip
        run: |
          echo ${{ github.sha }} > Release.txt
          Compress-Archive -Path ./sdl/build/install/*,./Release.txt -DestinationPath sdl.win.${{ github.ref_name }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: sdl.win.${{ github.ref_name }}.zip
  Lunux:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sdl
        uses: actions/checkout@v4
        with:
          repository: libsdl-org/SDL
          ref: release-2.28.4
          path: sdl
      - name: Install deps
        run: |
          sudo apt-get clean
          sudo apt-get update
          sudo apt-get -y install gcc-10 g++-10 libpulse-dev libasound2-dev libpulse-dev libxext-dev libegl-dev libdrm-dev libwayland-cursor0 libwayland-egl1 libxkbcommon-dev libxcursor-dev libgl-dev libgles-dev libglx-dev
          alias gcc='gcc-10'
          alias g++='g++-10'
          export CC=`which gcc-10`
          export CXX=`which gcc-10`
      - name: Build
        run: |
          cd sdl
          mkdir build
          cd build
          cmake .. -B Release -DCMAKE_BUILD_TYPE=Release
          cmake --build Release
          cmake --install Release --prefix install/Release
      - name: Generate tar
        run: |
          echo ${{ github.sha }} > Release.txt
          cp Release.txt ./sdl/build/install/Release
          tar -czvf sdl.linux.${{ github.ref_name }}.tar.gz -C ./sdl/build/install/Release .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: sdl.linux.${{ github.ref_name }}.tar.gz